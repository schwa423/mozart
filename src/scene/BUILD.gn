# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//apps/mozart/config.gni")

group("scene") {
  testonly = true

  public_deps = [
    ":scene_manager_service",
    "tests",
  ]
}

executable("scene_manager_service") {
  output_name = "scene_manager_service"

  sources = [
    "main.cc",
    "scene_manager_app.cc",
    "scene_manager_app.h",
  ]

  deps = [
    ":common",
    "//lib/escher/examples/common",
  ]
}

config("common_include_dirs") {
  include_dirs = [
    "//lib/escher",
    "//third_party/glm",
    "//lib",
  ]
}

source_set("common") {
  sources = [
    "acquire_fence.cc",
    "acquire_fence.h",
    "display.cc",
    "display.h",
    "fence.h",
    "frame_scheduler.cc",
    "frame_scheduler.h",
    "print_op.cc",
    "print_op.h",
    "release_fence_signaller.cc",
    "release_fence_signaller.h",
    "renderer/display_renderer.cc",
    "renderer/display_renderer.h",
    "renderer/renderer.cc",
    "renderer/renderer.h",
    "resources/camera.cc",
    "resources/camera.h",
    "resources/dump_visitor.cc",
    "resources/dump_visitor.h",
    "resources/gpu_memory.cc",
    "resources/gpu_memory.h",
    "resources/host_memory.cc",
    "resources/host_memory.h",
    "resources/image.cc",
    "resources/image.h",
    "resources/image_base.cc",
    "resources/image_base.h",
    "resources/image_pipe.cc",
    "resources/image_pipe.h",
    "resources/image_pipe_handler.cc",
    "resources/image_pipe_handler.h",
    "resources/import.cc",
    "resources/import.h",
    "resources/lights/directional_light.cc",
    "resources/lights/directional_light.h",
    "resources/material.cc",
    "resources/material.h",
    "resources/memory.cc",
    "resources/memory.h",
    "resources/nodes/entity_node.cc",
    "resources/nodes/entity_node.h",
    "resources/nodes/node.cc",
    "resources/nodes/node.h",
    "resources/nodes/scene.cc",
    "resources/nodes/scene.h",
    "resources/nodes/shape_node.cc",
    "resources/nodes/shape_node.h",
    "resources/resource.cc",
    "resources/resource.h",
    "resources/resource_linker.cc",
    "resources/resource_linker.h",
    "resources/resource_map.cc",
    "resources/resource_map.h",
    "resources/resource_type_info.h",
    "resources/resource_visitor.cc",
    "resources/resource_visitor.h",
    "resources/shapes/circle_shape.cc",
    "resources/shapes/circle_shape.h",
    "resources/shapes/rectangle_shape.cc",
    "resources/shapes/rectangle_shape.h",
    "resources/shapes/rounded_rectangle_shape.cc",
    "resources/shapes/rounded_rectangle_shape.h",
    "resources/shapes/shape.cc",
    "resources/shapes/shape.h",
    "scene_manager_impl.cc",
    "scene_manager_impl.h",
    "session/session.cc",
    "session/session.h",
    "session/session_context.cc",
    "session/session_context.h",
    "session/session_handler.cc",
    "session/session_handler.h",
    "util/error_reporter.cc",
    "util/error_reporter.h",
  ]

  public_deps = [
    "//application/lib/app",
    "//apps/mozart/services/geometry",
    "//apps/mozart/services/geometry/cpp",
    "//apps/mozart/services/scene",
    "//apps/tracing/lib/trace:provider",
    "//lib/escher/escher",
    "//lib/escher/examples/common",
    "//lib/fidl/cpp/bindings",
    "//lib/ftl",
    "//lib/mtl",
  ]

  public_configs = [ ":common_include_dirs" ]

  deps = [
    "//magma:vulkan",
  ]
}
