// Copyright 2014 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module mozart;

enum EventType {
  UNKNOWN,
  KEY_PRESSED,
  KEY_RELEASED,
  POINTER_CANCEL,
  POINTER_DOWN,
  POINTER_MOVE,
  POINTER_UP,
};

// This mirrors ui::EventFlags
// TODO(morrita): Use shift operator once it is available.
// no-format
enum EventFlags {
  NONE                =      0,
  CAPS_LOCK_DOWN      =      1,
  SHIFT_DOWN          =      2,
  CONTROL_DOWN        =      4,
  ALT_DOWN            =      8,
  LEFT_MOUSE_BUTTON   =     16,
  MIDDLE_MOUSE_BUTTON =     32,
  RIGHT_MOUSE_BUTTON  =     64,
  COMMAND_DOWN        =    128,
  EXTENDED            =    256,
  IS_SYNTHESIZED      =    512,
  ALTGR_DOWN          =   1024,
  MOD3_DOWN           =   2048
};

enum MouseEventFlags {
  IS_DOUBLE_CLICK     =  65536,
  IS_TRIPLE_CLICK     = 131072,
  IS_NON_CLIENT       = 262144,

  // TODO(erg): Move accessibility flags and maybe synthetic touch events here.
};

enum PointerKind {
  TOUCH,
  MOUSE,
};

const uint32 kModifierCapsLock     = 1;
const uint32 kModifierLeftShift    = 2;
const uint32 kModifierRightShift   = 4;
const uint32 kModifierShift        = 6; // (kModifierLeftShift | kModifierRightShift);
const uint32 kModifierLeftControl  = 8;
const uint32 kModifierRightControl = 16;
const uint32 kModifierControl      = 24; // (kModifierLeftControl | kModifierRightControl);
const uint32 kModifierLeftAlt      = 32;
const uint32 kModifierRightAlt     = 64;
const uint32 kModifierAlt          = 96; // (kModifierLeftAlt | kModifierRightAlt);
const uint32 kModifierLeftSuper    = 128;
const uint32 kModifierRightSuper   = 256;
const uint32 kModifierSuper        = 384; // (kModifierLeftSuper | kModifierRightSuper);

// end-no-format
